
networks:
  sre-lab-net:
    name: sre-lab-net        # pin the network name so all services share the same bridge
    driver: bridge

volumes:
  loki-data:
  grafana-data:

services:
  app:
    build:
      context: ../app
    container_name: sre-lab-app
    hostname: sre-lab-app
    # NOTE: no host port publish on purpose (Prometheus reaches it via Docker DNS)
    networks:
      sre-lab-net:
        aliases:
          - app
          - sre-lab-app
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.8
    container_name: sre-lab-loki
    command: -config.file=/etc/loki/loki-config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yml:ro
      - loki-data:/loki
    networks:
      - sre-lab-net
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.8
    container_name: sre-lab-promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - sre-lab-net
    depends_on:
      - loki
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: sre-lab-prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
    networks:
      - sre-lab-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.5
    container_name: sre-lab-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3001:3000"              # unchanged
    networks:
      - sre-lab-net
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - loki
      - prometheus
    restart: unless-stopped

